/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package phauhoang;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class qldshoadon extends javax.swing.JFrame {

    Vector hd = new Vector();
    Vector datahd = new Vector();

    public qldshoadon() {
        initComponents();
        setLocationRelativeTo(null);

        hd.add("Ngày");
        hd.add("Mã sản phẩm");
        hd.add("Tên sản phẩm");
        hd.add("Số lượng");
        hd.add("Đơn vị tính");
        hd.add("Đơn giá");
        hd.add("Thành tiền");
        hd.add("Tổng tiền");

        jTable1.setModel(new DefaultTableModel(datahd, hd));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtMaSp = new javax.swing.JTextField();
        txtTenSp = new javax.swing.JTextField();
        txtDonViTinh = new javax.swing.JTextField();
        txtSoLuong = new javax.swing.JTextField();
        txtNgay = new javax.swing.JTextField();
        txtDonGia = new javax.swing.JTextField();
        txtThanhTien = new javax.swing.JTextField();
        options = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DANH SÁCH HÓA ĐƠN");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/phauhoang/head.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 35)); // NOI18N
        jLabel1.setText("HÓA ĐƠN");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Ngày");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Đơn vị tính");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Mã sản phẩm");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Số lượng");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Tên sản phẩm");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("Đơn giá");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel10.setText("Thành tiền");

        txtMaSp.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        txtTenSp.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        txtDonViTinh.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        txtSoLuong.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        txtNgay.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        txtDonGia.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        txtThanhTien.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        options.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        options.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1. Mặt hàng nào bán được nhiều nhất", "2. Tổng tiền từ ngày 20/02/2021 -> 20/05/2021", "3. Số lượng mặt hàng ip13 bán được trong 4 tháng đầu năm 2023 và lợi nhuận" }));
        options.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionsActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton1.setText("Thêm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton2.setText("CHỌN");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Ngày", "Mã sản phẩm", "Tên sản phẩm", "Số lượng", "Đơn vị tính", "Đơn giá", "Thành tiền", "Tổng tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setRowHeight(30);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTenSp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaSp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(31, 31, 31)
                                .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel5))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtDonGia, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtThanhTien, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(txtDonViTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(112, 112, 112))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(376, 376, 376)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(options, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(359, 359, 359)
                        .addComponent(txtNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(431, 431, 431)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(411, 411, 411)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(8, 8, 8)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtMaSp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtTenSp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtDonViTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))))
                .addGap(22, 22, 22)
                .addComponent(jButton1)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addContainerGap(130, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void optionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_optionsActionPerformed

    public void resetForm() {
        txtNgay.setText("");
        txtMaSp.setText("");
        txtTenSp.setText("");
        txtSoLuong.setText("");
        txtDonGia.setText("");
        txtThanhTien.setText("");
        txtDonViTinh.setText("");
    }

    public boolean checkValidateForm() {
        if (txtNgay.getText().isEmpty() || txtMaSp.getText().isEmpty() || txtDonViTinh.getText().isEmpty()
                || txtSoLuong.getText().isEmpty() || txtDonGia.getText().isEmpty()
                || txtThanhTien.getText().isEmpty()
                || txtTenSp.getText().isEmpty()) {
            return false;
        }
        return true;
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String masp = txtMaSp.getText();
        String tensp = txtTenSp.getText();
        String ngay = txtNgay.getText();
        String donvitinh = txtDonViTinh.getText();

        Vector add = new Vector();
        add.add(ngay);
        add.add(masp);
        add.add(tensp);

        int soluong = Integer.parseInt(txtSoLuong.getText());
        add.add(soluong);

        datahd.add(add);
        add.add(donvitinh);

        float dongia = Float.parseFloat(txtDonGia.getText());
        add.add(dongia);

        int thanhtien = Integer.parseInt(txtThanhTien.getText());
        add.add(thanhtien);

        int tongtien = thanhtien * soluong;
        add.add(tongtien);

        jTable1.setModel(new DefaultTableModel(datahd, hd));
        JOptionPane.showMessageDialog(this, "Bạn đã thêm thành công!");
        resetForm();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String selectedOption = (String) options.getSelectedItem();
        //------------------------
        if (selectedOption.startsWith("1. Mặt hàng nào bán được nhiều nhất")) {
            int maxSoLuong = -1;
            Vector maxHoaDon = null;

            for (int i = 0; i < datahd.size(); i++) {
                Vector hoaDon = (Vector) datahd.get(i);
                int soLuong = (int) hoaDon.get(3);
                if (soLuong > maxSoLuong) {
                    maxSoLuong = soLuong;
                    maxHoaDon = hoaDon;
                }
            }

            if (maxHoaDon != null) {
                DefaultTableModel model = new DefaultTableModel();
                model.addColumn("Ngày");
                model.addColumn("Mã sản phẩm");
                model.addColumn("Tên sản phẩm");
                model.addColumn("Số lượng");
                model.addColumn("Đơn vị tính");
                model.addColumn("Đơn giá");
                model.addColumn("Thành tiền");
                model.addColumn("Tổng tiền");
                JTable table = new JTable(model);
                Vector row = new Vector();
                row.add(maxHoaDon.get(0));
                row.add(maxHoaDon.get(1));
                row.add(maxHoaDon.get(2));
                row.add(maxHoaDon.get(3));
                row.add(maxHoaDon.get(4));
                row.add(maxHoaDon.get(5));
                row.add(maxHoaDon.get(6));
                row.add(maxHoaDon.get(7));

                model.addRow(row);
                JScrollPane scrollPane = new JScrollPane(table);
                JFrame frame = new JFrame("Bảng thông tin hóa đơn có số lượng nhiều nhất");
                frame.setSize(1000, 200);
                // Lấy kích thước của màn hình
                Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
                // Tính toán tọa độ x, y để JFrame nằm ở giữa màn hình
                int x = (int) ((screenSize.getWidth() - frame.getWidth()) / 2);
                int y = (int) ((screenSize.getHeight() - frame.getHeight()) / 2);
                // Đặt tọa độ cho JFrame mới
                frame.setLocation(x, y);
                frame.setVisible(true);
                setLocationRelativeTo(null);
                frame.add(scrollPane);

            } else {
                JOptionPane.showMessageDialog(this, "Không có hóa đơn nào trong danh sách.");
            }
        }
        //------------------------
        if (selectedOption.startsWith("2. Tổng tiền từ ngày 20/02/2021 -> 20/05/2021")) {
            SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
            Date startDate = null, endDate = null;

            try {
                startDate = format.parse("20/02/2021");
                endDate = format.parse("20/05/2021");
            } catch (ParseException ex) {
                // xử lý khi parse ngày thất bại
            }
            int sumTien = 0;
            for (int i = 0; i < datahd.size(); i++) {
                Vector hoaDon1 = (Vector) datahd.get(i);
                String ngayhd = (String) hoaDon1.get(0);
                Date ngayHoaDon;
                try {
                    ngayHoaDon = format.parse(ngayhd);
                } catch (ParseException ex) {
                    // xử lý khi parse ngày thất bại
                    continue;
                }
                if (ngayHoaDon.after(startDate) && ngayHoaDon.before(endDate)) {
                    int tongTien = (int) hoaDon1.get(7);
                    sumTien += tongTien;
                }
            }
            String message1 = "THÔNG BÁO:\n"
                    + "Tổng tiền =  " + sumTien + "\n";
            JOptionPane.showMessageDialog(this, message1);
        }
        //-----------------------------
        if (selectedOption.startsWith("3. Số lượng mặt hàng ip13 bán được trong 4 tháng đầu năm 2023 và lợi nhuận")) {
            // Hiển thị hộp thoại nhập chi phí
            String input = JOptionPane.showInputDialog(this, "Giá nhập ip13:");
            if (input == null || input.trim().equals("")) {
                // Nếu người dùng không nhập hoặc hủy bỏ, không tính lợi nhuận
                return;
            }
            SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
            Date startDate = null, endDate = null;

            try {
                startDate = format.parse("01/01/2023");
                endDate = format.parse("30/04/2023");
            } catch (ParseException ex) {
                // xử lý khi parse ngày thất bại
            }
            int sumTien2 = 0;
            int soluongip13 = 0;
            for (int i = 0; i < datahd.size(); i++) {
                Vector hoaDon1 = (Vector) datahd.get(i);
                String ngayhd = (String) hoaDon1.get(0);
                Date ngayHoaDon;
                try {
                    ngayHoaDon = format.parse(ngayhd);
                } catch (ParseException ex) {
                    // xử lý khi parse ngày thất bại
                    continue;
                }
                if (ngayHoaDon.after(startDate) && ngayHoaDon.before(endDate)) {
                    int tongTien = (int) hoaDon1.get(7);
                    int soLuong = (int) hoaDon1.get(3);
                    String sp = (String) hoaDon1.get(2);
                    if(sp.equals("ip13")){
                        sumTien2 += tongTien;
                        soluongip13 += soLuong;
                    }
                }
            }
            String message1 = "THÔNG BÁO:\n"
                    + "Lợi nhuận =  " + (sumTien2 - Integer.parseInt(input)) + "\n"
                    + "Số lượng  =  " + soluongip13 + "\n";
            JOptionPane.showMessageDialog(this, message1);
        }
        //---------------------------------------
    }//GEN-LAST:event_jButton2ActionPerformed
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(qldshoadon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(qldshoadon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(qldshoadon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(qldshoadon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new qldshoadon().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> options;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtDonViTinh;
    private javax.swing.JTextField txtMaSp;
    private javax.swing.JTextField txtNgay;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTenSp;
    private javax.swing.JTextField txtThanhTien;
    // End of variables declaration//GEN-END:variables
}
